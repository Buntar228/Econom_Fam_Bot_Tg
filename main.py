import pandas as pd
from aiogram import Bot, executor, Dispatcher, types
from Main_kb import kb_main, pic_keyboard
from Kafedri_data import inline_kb_kafedri
from Take_user_name_inline_kb import take_user_name_kb
from Prepodi_inline_kb import prepodi_kb
from Free_room_kb import free_room_kb
from Meropriatia_kb import meropriatia_kb
from Json_data import sched_w_st, data_all_teachers_and_mails
from Google_sheet import *
from apscheduler.schedulers.asyncio import AsyncIOScheduler
from datetime import datetime
from sercher_cacsa import get_schedule
from datetime import date
from kabs_data_and_logic import list_of_kabs_first_flour, list_of_kabs_second_flour, \
    list_of_kabs_third_flour, list_of_kabs_fourth_flour, list_of_kabs_fith_flour

TOKEN_API = '6431263054:AAG5luZr2VIGwYPIiBJ4QHxEAwSKH-iil70'


bot = Bot(TOKEN_API)
dp = Dispatcher(bot)


user_name = ''

buttons = ['–°—Ä–µ–¥–∞ 11 –æ–∫—Ç—è–±—Ä—è 2023, 14:00', '–°—Ä–µ–¥–∞ 11 –æ–∫—Ç—è–±—Ä—è 2023, 15:00',
           '–°—Ä–µ–¥–∞ 11 –æ–∫—Ç—è–±—Ä—è 2023, 16:00', '–°—Ä–µ–¥–∞ 18 –æ–∫—Ç—è–±—Ä—è 2023, 14:00',
           '–°—Ä–µ–¥–∞ 18 –æ–∫—Ç—è–±—Ä—è 2023, 15:00', '–°—Ä–µ–¥–∞ 18 –æ–∫—Ç—è–±—Ä—è 2023, 16:00',
           '–°—Ä–µ–¥–∞ 25 –æ–∫—Ç—è–±—Ä—è 2023, 14:00', '–°—Ä–µ–¥–∞ 25 –æ–∫—Ç—è–±—Ä—è 2023, 15:00',
           '–°—Ä–µ–¥–∞ 25 –æ–∫—Ç—è–±—Ä—è 2023, 16:00']
psychologist = ['–ü–æ–ª–∏–Ω–∞ –ß–∏–±–∏—Å–æ–≤–∞', '–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –≤ –ª–∏—Å—Ç –æ–∂–∏–¥–∞–Ω–∏—è']
list_for_google_sheet = []


async def on_startup(_):
    print('Bot started')



async def delay_reminder(chat_id: int):
    await bot.send_message(chat_id=chat_id,
                           text=f'–£–≤–∞–∂–∞–µ–º—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –Ω–∞–ø–æ–º–∏–Ω–∞—é –≤–∞–º –æ –∑–∞–ø–∏—Å–∏ –∫ –ø—Å–∏—Ö–æ–ª–æ–≥—É')


@dp.message_handler(commands=['start'])
async def start_command(message: types.Message) -> None:
    telegram_user_name = message.from_user.full_name
    await bot.send_photo(chat_id=message.from_user.id,
                         photo='https://www.econ.msu.ru/sys/raw.php?o=65079&p=attachment',
                         caption=f'–ü—Ä–∏–≤–µ—Ç, {telegram_user_name}, –º–Ω–µ –æ—á–µ–Ω—å –ø—Ä–∏—è—Ç–Ω–æ, —á—Ç–æ –≤—ã —Ä–µ—à–∏–ª–∏ –º–Ω–æ—é –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å'
                                 f'—è!\n\n'
                                 '–î–∞–≤–∞–π –ø—Ä–∏—Å—Ç—É–ø–∏–º –∫ –Ω–∞—à–µ–º—É –∑–Ω–∞–∫–æ–º—Å—Ç–≤—É –∏ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ–º—É –ø—Ä–µ–±—ã–≤–∞–Ω–∏—é –Ω–∞ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–µ!\n\n'
                                 '–ö–∞–∫ —è –º–æ–≥—É –≤–∞–º –ø–æ–º–æ—á—å:\n\n' 
                                 '1. –ü–æ–º–æ–≥—É —É–∑–Ω–∞—Ç—å –≤–∞—à–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ.\n\n' 
                                 '2. –ü–æ–º–æ–≥—É –Ω–∞–π—Ç–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –∏ –µ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.\n\n' 
                                 '3. –ü–æ–º–æ–≥—É –±—ã—Ç—å –≤ –∫—É—Ä—Å–µ –≤—Å–µ—Ö —Å–æ–±—ã—Ç–∏–π —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞: –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö –∏ –Ω–µ –æ—á–µ–Ω—å).\n\n'
                                 '4. –ü–æ–º–æ–≥—É –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å–æ –≤—Å–µ–º–∏ –∫–∞—Ñ–µ–¥—Ä–∞–º–∏ —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–æ–≥–æ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞, –≤–æ–∑–º–æ–∂–Ω–æ, –≤–∞–º '
                                 '—ç—Ç–æ '
                                 '–ø–æ–º–æ–∂–µ—Ç –≤ –¥–∞–ª—å–Ω–µ–π—à–µ–º.\n\n'
                                 '5. –°–æ–≤–º–µ—Å—Ç–Ω—ã–º–∏ —É—Å–∏–ª–∏—è–º–∏ —Å –Ω–∞—à–∏–º —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–æ–º –ø–æ–º–æ–∂–µ–º –≤–∞–º —É—Å—Ç—Ä–æ–∏—Ç—å—Å—è –Ω–∞ —Ä–∞–±–æ—Ç—É.\n\n'
                                 '6. –ü–æ—Å—Ç–∞—Ä–∞—é—Å—å –Ω–µ –¥–æ–ø—É—Å—Ç–∏—Ç—å –¥–µ–ø—Ä–µ—Å—Å–∏–≤–Ω—ã—Ö –º—ã—Å–ª–µ–π –≤–æ –≤—Ä–µ–º—è –æ–±—É—á–µ–Ω–∏—è –≤ –ú–ì–£ —Å –ø–æ–º–æ—â—å—é –Ω–∞'
                                 '—à–µ–≥–æ '
                                 '–ø—Å–∏—Ö–æ–ª–æ–≥–∞. –ì—Ä—É—Å—Ç–∏—Ç—å - –≤—Ä–µ–¥–Ω–æ!\n\n'
                                 '–ß—Ç–æ –±—ã –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ —É–∑–Ω–∞—Ç—å –æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö –±–æ—Ç–∞, –Ω–∞–∂–º–∏—Ç–µ \n/description',
                         reply_markup=kb_main)
    await message.delete()


@dp.message_handler(commands=['description'])
async def help_command(message: types.Message) -> None:
    await bot.send_photo(chat_id=message.from_user.id,
                         caption='–í –¥–∞–Ω–Ω–æ–º —Ä–∞–∑–¥–µ–ª–µ –≤—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ–Ω—è—Ç—å, –∫–∞–∫ —Å–æ –º–Ω–æ–π –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å.\n\n' 
                         
                                 '–ö–Ω–æ–ø–∫–∞ ¬´–†–∞—Å–ø–∏—Å–∞–Ω–∏—è¬ª –ø–æ–∑–≤–æ–ª–∏—Ç –≤–∞–º —É–∑–Ω–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–æ–≤. \n\n'
                                
                                 '–° –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ ¬´–°–≤–æ–±–æ–¥–Ω—ã–µ –∫–∞–±–∏–Ω–µ—Ç—ã¬ª –≤—ã —Å–º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å, –≥–¥–µ –º–æ–∂–Ω–æ –æ—Ç–¥–æ—Ö–Ω—É—Ç—å –∏–ª–∏ '
                                 '–∑–∞–Ω—è—Ç—å—Å—è —Å–≤–æ–∏–º–∏ –¥–µ–ª–∞–º–∏ –≤–æ –≤—Ä–µ–º—è –æ–∫–æ–Ω –º–µ–∂–¥—É –ø–∞—Ä–∞–º–∏. \n\n'
                                    
                                 '–° –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ ¬´–ö–æ–Ω—Ç–∞–∫—Ç—ã –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π¬ª –º–æ–∂–Ω–æ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º –ø–æ –ø–æ—á—Ç–µ '
                                 '–∏–ª–∏ —É–∑–Ω–∞—Ç—å, –≥–¥–µ –æ–Ω –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–µ –¥–ª—è –ª–∏—á–Ω–æ–≥–æ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞.\n\n '
                                    
                                 '–° –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ ¬´–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è¬ª –≤—ã —Å—Ç–∞–Ω–µ—Ç–µ –∞–∫—Ç–∏–≤–Ω—ã–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –∂–∏–∑–Ω–∏ –í–£–ó–∞, –Ω–∞–π–¥–µ—Ç–µ '
                                 '—Å–µ–±–µ –Ω–æ–≤—ã—Ö –¥—Ä—É–∑–µ–π —Å –æ–±—â–∏–º–∏ –∏–Ω—Ç–µ—Ä–µ—Å–∞–º–∏.\n\n'
                                    
                                 '–° –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ ¬´–ö–∞—Ñ–µ–¥—Ä—ã –≠–§ –ú–ì–£¬ª –≤—ã –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç–µ—Å—å —Å–æ –≤—Å–µ–º–∏ –∫–∞—Ñ–µ–¥—Ä–∞–º–∏ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞. '
                                 '–≠—Ç–æ –≤–∞–º —Å–∏–ª—å–Ω–æ –ø–æ–º–æ–∂–µ—Ç –ø—Ä–∏ –Ω–∞–ø–∏—Å–∞–Ω–∏–∏ –∫—É—Ä—Å–æ–≤–æ–π —Ä–∞–±–æ—Ç—ã –∏ –¥–∏–ø–ª–æ–º–∞))). \n\n'
                                    
                                 '–° –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ ¬´–ü–æ–º–æ—â—å —Å —Ä–∞–±–æ—Ç–æ–π¬ª –≤—ã —Å–º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ —Å–µ–±–µ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—É—é —Å—Ç–∞–∂–∏—Ä–æ–≤–∫—É. '
                                 '–í —ç—Ç–æ–º –≤–∞–º –ø–æ–º–æ–∂–µ—Ç —Å–∞–º –≠–§ –ú–ì–£. \n\n'
                                    
                                 '–ö–Ω–æ–ø–∫–∞ ¬´–ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –ø–æ–º–æ—â—å¬ª - –∑–∞–±–æ—Ç–∞ –∞ –≤–∞—à–µ–º –∑–¥–æ—Ä–æ–≤—å–µ. –ù–µ –ø—Ä–µ–Ω–µ–±—Ä–µ–≥–∞–π—Ç–µ –ø–æ–º–æ—â—å—é '
                                 '—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤. –°–æ–≤–º–µ—â–∞—Ç—å —É—Å–ø–µ—à–Ω—É—é —É—á–µ–±—É, –¥—Ä—É–∑–µ–π –∏ –ø—Ä–æ–±–ª–µ–º—ã –æ—á–µ–Ω—å —Å–ª–æ–∂–Ω–æ. '
                                 '–ù–µ –ø–æ–∑–≤–æ–ª—å—Ç–µ –∏–º –∏—Å–ø–æ—Ä—Ç–∏—Ç—å –≤–∞—à–µ –ø—Ä–µ–±—ã–≤–∞–Ω–∏–µ –≤ –ú–ì–£!!!',
                         photo='https://kartinkof.club/uploads/posts/2022-06/1656094468_3-kartinkof-club-p-kartinki-s'
                               '-nadpisyu-pomogi-mne-3.jpg')
    await message.delete()


@dp.message_handler(text='üë©‚Äçüè´–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏')
async def prep_command(message: types.Message) -> None:
    await bot.send_message(chat_id=message.from_user.id,
                           text=f'{message.from_user.first_name}, '
                                f'–≤ –¥–∞–Ω–Ω–æ–º —Ä–∞–∑–¥–µ–ª–µ –≤—ã —Å–º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å, –≥–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –≤ —Ç–µ—á–µ–Ω–∏–µ –≤—Å–µ–≥–æ '
                                f'–¥–Ω—è –∏–ª–∏ —É–∑–Ω–∞—Ç—å –µ–≥–æ/–µ–µ –ø–æ—á—Ç—É, —á—Ç–æ–±—ã –¥–æ–≥–æ–≤–æ—Ä–∏—Ç—å—Å—è –æ –≤—Å—Ç—Ä–µ—á–µ –∏ –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –æ–±—Å—É–∂–¥–µ–Ω–∏—è '
                                f'–≤–∞—à–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞',
                           reply_markup=prepodi_kb)
    await message.delete()

@dp.message_handler(text='üìÜ–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ')
async def time_table_command(message: types.Message) -> None:
    await bot.send_photo(chat_id=message.from_user.id,
                         caption='–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–≤–æ–µ –∑–∞–≤–µ—Ç–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ, –≤–∞–º –Ω–∞–¥–æ –Ω–∞–ø–∏—Å–∞—Ç—å —Å–≤–æ–µ –∏–º—è <b>–ø—Ä—è–º '
                                 '–∫–∞–∫ –≤ –ø–∞—Å–ø–æ—Ä—Ç–µ</b> üßê'+'.\n\n'
                                 '–ù–∞–ø—Ä–∏–º–µ—Ä, <b>–ü—É–ø–∫–∏–Ω –í–∞—Å–∏–ª–∏–π –°–µ—Ä–≥–µ–µ–≤–∏—á</b>.',
                         photo='https://cs14.pikabu.ru/post_img/big/2022/03/08/7/1646737740129559994.jpg',
                         parse_mode='HTML')
    await message.delete()


@dp.message_handler(text='üîé–°–≤–æ–±–æ–¥–Ω—ã–µ –∫–∞–±–∏–Ω–µ—Ç—ã')
async def free_rooms_command(message: types.Message) -> None:
    await bot.send_message(chat_id=message.from_user.id,
                           text=f'{message.from_user.first_name}, –≤ –¥–∞–Ω–Ω–æ–º —Ä–∞–∑–¥–µ–ª–µ –≤—ã —Å–º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å, –∫–∞–∫–∏–µ –∫–∞–±–∏–Ω–µ—Ç—ã '
                                f'—Å–≤–æ–±–æ–¥–Ω—ã –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç.\n–í–µ–¥—å —Å–≤–æ–±–æ–¥–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç-–º–µ—Å—Ç–æ, –≥–¥–µ –≤—ã —Å–º–æ–∂–µ—Ç–µ –ø—Ä–æ–≤–µ—Å—Ç–∏ '
                                f'–≤—Ä–µ–º—è —Å–æ —Å–≤–æ–∏–º–∏ –¥—Ä—É–∑—å—è–º–∏ –º–µ–∂–¥—É –ø–∞—Ä–∞–º–∏, –∑–∞–Ω–∏–º–∞—è—Å—å –ø–æ–ª–µ–∑–Ω—ã–º–∏ –≤–µ—â–∞–º–∏.\n\n'
                                f'–î–ª—è –Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –ø–∞—Ä—É, –≤ —Ç–µ—á–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–π –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞–π—Ç–∏ –ø—É—Å—Ç–æ–π –∫–∞–±–∏–Ω–µ—Ç',
                           parse_mode='HTML',
                           reply_markup=free_room_kb)
    await message.delete()


@dp.message_handler(text='üíÉ–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è')
async def meropriatia_command(message: types.Message) -> None:
    await bot.send_photo(chat_id=message.from_user.id,
                         caption=f'{message.from_user.first_name}, –≤ –¥–∞–Ω–Ω–æ–º —Ä–∞–∑–¥–µ–ª–µ –≤—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å–æ –≤—Å–µ–º–∏ '
                                 f'–º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –ø—Ä–æ–≤–æ–¥–∏—Ç—å—Å—è –∫–∞–∫ –æ—Ç –ª–∏—Ü–∞ –Ω–∞—à–µ–≥–æ –ª—é–±–∏–º–æ–≥–æ '
                                 f'–≠–§ –ú–ì–£, —Ç–∞–∫ –∏ –æ—Ç –ª–∏—Ü–∞ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤.',
                         photo='https://static.tildacdn.com/tild6138-3431-4134-a566-393364393663/EFMSU_mag_edita'
                               'ble_G.jpg',
                         reply_markup=meropriatia_kb)


@dp.message_handler(text='–ö–∞—Ñ–µ–¥—Ä—ã –≠–§ –ú–ì–£')
async def kafedri_command(message: types.Message) -> None:
    await bot.send_photo(chat_id=message.from_user.id,
                         caption='–ó–¥–µ—Å—å –º–æ–∂–Ω–æ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å–æ —Å–ø–∏—Å–∫–æ–º –∫–∞—Ñ–µ–¥—Ä,'
                                 '–ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –Ω–∞ —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–æ–º —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–µ.\n'
                                 '–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ –∫–∞–∂–¥–æ–π –∏–∑ –Ω–∏—Ö, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ '
                                 '–Ω–∞–∂–∞—Ç—å –Ω–∞ –ø–æ–Ω—Ä–∞–≤–∏–≤—à—É—é—Å—è –≤–∞–º!',
                         photo='https://www.msu.ru/info/map/images/46/photo4.jpg',
                         reply_markup=inline_kb_kafedri)
    await message.delete()


@dp.message_handler(text='üí∞–ü–æ–º–æ—â—å —Å —Ä–∞–±–æ—Ç–æ–π')
async def stagirovki_command(message: types.Message) -> None:
    await bot.send_photo(chat_id=message.from_user.id,
                         caption=f'–°–µ–≥–æ–¥–Ω—è –°–ª—É–∂–±–∞ —Å–æ–¥–µ–π—Å—Ç–≤–∏—è —Ç—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤—É –∏–º–µ–µ—Ç —à–∏—Ä–æ–∫–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã —Å –∫–æ–º–ø–∞–Ω–∏—è–º–∏, '
                                 f'–∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω–Ω—ã–º–∏ –≤ –≤—ã–ø—É—Å–∫–Ω–∏–∫–∞—Ö —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞. –°–ø–∏—Å–æ–∫ –∫–æ–º–ø–∞–Ω–∏–π –∏ —Å—Ñ–µ—Ä –∏—Ö –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏'
                                 f' –ø–æ—Å—Ç–æ—è–Ω–Ω–æ —Ä–∞—Å—à–∏—Ä—è–µ—Ç—Å—è - –≤ —ç–∫–æ–Ω–æ–º–∏—Å—Ç–∞—Ö –∏ –º–µ–Ω–µ–¥–∂–µ—Ä–∞—Ö –Ω—É–∂–¥–∞—é—Ç—Å—è  –∫–æ–º–ø–∞–Ω–∏–∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏'
                                 f' –ª—é–±–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è. –ü—Ä–∏ —ç—Ç–æ–º –Ω–∞–∏–±–æ–ª–µ–µ –∞–∫—Ç–∏–≤–Ω—ã–º–∏ –ø–∞—Ä—Ç–Ω–µ—Ä–∞–º–∏ –§–∞–∫—É–ª—å—Ç–µ—Ç–∞ —è–≤–ª—è—é—Ç—Å—è '
                                 f'–±—É—Ö–≥–∞–ª—Ç–µ—Ä—Å–∫–∏–µ/–∞—É–¥–∏—Ç–æ—Ä—Å–∫–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏, —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏, —Å—Ç—Ä–∞—Ö–æ–≤—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏, '
                                 f'–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∏ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞—Ä–æ–¥–Ω–æ–≥–æ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è, –∫–æ–º–ø–∞–Ω–∏–∏, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—â–∏–µ—Å—è'
                                 f' –Ω–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏, –∫–∞–¥—Ä–æ–≤—ã–µ, —Ç–µ–ª–µ–∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏, –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–µ –∏ '
                                 f'–Ω–∞—É—á–Ω–æ-–∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã. –î–ª—è –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏–∏ –∏ –ø–æ–º–æ—â–∏, '
                                 f'–ø–µ—Ä–µ–π–¥–∏—Ç–µ'
                                 f'–ø–æ —Å—Å—ã–ª–∫–µ'+' https://www.econ.msu.ru/students/eas/',
                         photo='https://sravni-news-prod.storage.yandexcloud.net/uploads/2021/12/127523-n42lmrytsk5f'
                               '8acijhwp.jpg')
    await message.delete()
    

# –º–µ—Ç–æ–¥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã –≥—É–≥–ª —à–∏—Ç
@dp.message_handler(text='‚åõ–ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –ø–æ–º–æ—â—å')
async def google_sheet_command(message: types.Message):
    await bot.send_photo(chat_id=message.from_user.id,
                         caption='üë©üèº '+'‚Äç–ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É –º–æ–∂–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –∏ –ø—Ä–∏–π—Ç–∏ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é, —á—Ç–æ–±—ã –ø–æ—Ä–∞–±–æ—Ç–∞—Ç—å '
                                 '—Å –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–º–∏ –ø–µ—Ä–µ–∂–∏–≤–∞–Ω–∏—è–º–∏ –∏–ª–∏ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–∞–∫–æ–ø–∏–≤—à–∏–º–∏—Å—è –º—ã—Å–ª—è–º–∏ –∏ —ç–º–æ—Ü–∏—è–º–∏.'
                                 ' ‚åõ '+'–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–µ–∞–Ω—Å–∞ ‚Äî –æ–∫–æ–ª–æ 50 –º–∏–Ω—É—Ç '
                                 '–ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–∏ –∫–∞–∫–æ–π-–ª–∏–±–æ –≤–æ–∑–Ω–∏–∫—à–µ–π –ø—Ä–æ–±–ª–µ–º—ã –∏ –≤—ã –±—ã —Ö–æ—Ç–µ–ª–∏ '
                                 '–ø–æ–ª—É—á–∏—Ç—å –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∞–Ω–∫–µ—Ç—É, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç '
                                 '–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∞ –Ω–∏–∂–µ.',
                         photo='https://babr24.com/n2p/i/2021/1/21_1_5_2_05132453_b.jpg')
    await bot.send_message(chat_id=message.from_user.id,
                           text=f"–ü—Ä–∏–µ–º –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –ø–æ —Å—Ä–µ–¥–∞–º —Å 14.00 –¥–æ 17.00 (–∞—É–¥ 447)\n"
                                f"–ù–∞ –±–µ—Å–µ–¥—É —Å –∫–∞–∂–¥—ã–º —á–µ–ª–æ–≤–µ–∫–æ–º –≤—ã–¥–µ–ª–µ–Ω–æ 50 –º–∏–Ω—É—Ç.\n\n"
                                f"<b>–í–ê–ñ–ù–û</b>: –ø–æ–∫–∞ —É –Ω–∞—Å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –ø—Å–∏—Ö–æ–ª–æ–≥, –ß–∏–±–∏—Å–æ–≤–∞ –ü–æ–ª–∏–Ω–∞. "
                                f"–ï—Å–ª–∏ –í—ã –∑–Ω–∞–∫–æ–º—ã —Å –Ω–µ–π –ª–∏—á–Ω–æ, –æ–Ω–∞ –Ω–µ —Å–º–æ–∂–µ—Ç –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é —Å –í–∞–º–∏ —Ä–∞–±–æ—Ç–∞—Ç—å. "
                                f"–í —ç—Ç–æ–º —Å–ª—É—á–∞–µ <b>–Ω–µ –Ω–∞–¥–æ</b> –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å—Å—è –Ω–∞ –≤—Ä–µ–º—è, "
                                f"<b>–∑–∞–ø–∏—à–∏—Ç–µ—Å—å –≤ –ª–∏—Å—Ç –æ–∂–∏–¥–∞–Ω–∏—è</b>.\n\n"
                                f"–£ –í–∞—Å –µ—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ <b>2 –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –≤—Å—Ç—Ä–µ—á–∏</b>. "
                                f"–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–∏–µ–º  –º–æ–∂–Ω–æ –Ω–µ –ø–æ–∑–∂–µ, —á–µ–º –∑–∞ 48 —á–∞—Å–æ–≤ –¥–æ –≤—Å—Ç—Ä–µ—á–∏."
                                f"–ï—Å–ª–∏ –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –±—É–¥–µ—Ç –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏ –∏–ª–∏ –æ—Ç–º–µ–Ω–∏—Ç—å –≤—Å—Ç—Ä–µ—á—É, "
                                f"–ø–æ–∂–∞–ª—É–π—Å—Ç–∞, <b>–Ω–∞–ø–∏—à–∏—Ç–µ –æ–± —ç—Ç–æ–º –∑–∞ 48 —á–∞—Å–æ–≤ –¥–æ –Ω–∞—á–∞–ª–∞ —Å–µ—Å—Å–∏–∏</b> "
                                f"–±–æ—Ç—É —Å –ø–æ–º–æ—â—å—é —Å–æ–æ–±—â–µ–Ω–∏—è "
                                f"<b>'–£–¥–∞–ª–∏ –º–æ—é –∑–∞–ø–∏—Å—å'</b>, –∏–Ω–∞—á–µ –≤—Å—Ç—Ä–µ—á–∞ –±—É–¥–µ—Ç —Å—á–∏—Ç–∞—Ç—å—Å—è —Å–æ—Å—Ç–æ—è–≤—à–µ–π—Å—è "
                                f"(–ø–µ—Ä–µ–Ω–æ—Å–∏—Ç—å/–æ—Ç–º–µ–Ω—è—Ç—å –≤—Å—Ç—Ä–µ—á–∏ –º–æ–∂–Ω–æ –Ω–µ –±–æ–ª–µ–µ 1 —Ä–∞–∑–∞). "
                                f"–ü—Ä–∏ –æ–ø–æ–∑–¥–∞–Ω–∏–∏ –≤—Å—Ç—Ä–µ—á–∞ –Ω–µ –ø—Ä–æ–¥–ª–µ–≤–∞–µ—Ç—Å—è. <b>–ù–µ –æ–ø–∞–∑–¥—ã–≤–∞–π—Ç–µ!</b>",
                           parse_mode="HTML")
    psychologist_keaboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    psychologist_keaboard.add(*psychologist)
    await bot.send_message(chat_id=message.from_user.id,
                           text=f'–í—ã–±–µ—Ä–∏—Ç–µ –ø—Å–∏—Ö–æ–ª–æ–≥–∞, —Å –∫–æ—Ç–æ—Ä—ã–º –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å—Å—è',
                           parse_mode="HTML",
                           reply_markup=psychologist_keaboard)


@dp.message_handler(text="–ü–æ–ª–∏–Ω–∞ –ß–∏–±–∏—Å–æ–≤–∞")
async def main_psychologist(message: types.Message):
    list_for_google_sheet.clear()
    list_for_google_sheet.append(message.text)
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    keyboard.add(*buttons[:4])
    await bot.send_message(chat_id=message.from_user.id,
                           text=f"–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è, –≤ –∫–æ—Ç–æ—Ä–æ–µ –≤–∞–º —É–¥–æ–±–Ω–æ –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å—Å—è",
                           parse_mode="HTML",
                           reply_markup=keyboard)


@dp.message_handler(text='–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –≤ –ª–∏—Å—Ç –æ–∂–∏–¥–∞–Ω–∏—è')
async def extra_pscychologist(message: types.Message):
    list_for_google_sheet.clear()
    list_for_google_sheet.append(message.text)
    await bot.send_message(chat_id=message.from_user.id,
                           text=f"–î–ª—è –Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ–µ –∏–º—è –∏ –Ω–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ\n\n"
                           f"<b>–ö–æ–ª–µ—Å–Ω–∏–∫–æ–≤ –î–º–∏—Ç—Ä–∏–π –ú–∏—Ö–∞–π–ª–æ–≤–∏—á –≠305</b>\n\n"
                           f"(–∫–∞–∂–¥–æ–µ —Å–ª–æ–≤–æ –¥–æ–ª–∂–Ω–æ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å –∑–∞–≥–ª–∞–≤–Ω–æ–π –±—É–∫–≤—ã)",
                           parse_mode="HTML")


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏
@dp.message_handler(lambda message: message.text in buttons)
async def button_click(message: types.Message):
    buttons.remove(message.text)
    if len(buttons) >= 0:
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        keyboard.add(*buttons[:3])
        list_for_google_sheet.append(message.text)
    await bot.send_message(chat_id=message.from_user.id,
                           text=f"–î–ª—è –Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ–µ –∏–º—è –∏ –Ω–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ\n\n"
                                f"<b>–ö–æ–ª–µ—Å–Ω–∏–∫–æ–≤ –î–º–∏—Ç—Ä–∏–π –ú–∏—Ö–∞–π–ª–æ–≤–∏—á –≠305</b>\n\n"
                                f"(–∫–∞–∂–¥–æ–µ —Å–ª–æ–≤–æ –¥–æ–ª–∂–Ω–æ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å –∑–∞–≥–ª–∞–≤–Ω–æ–π –±—É–∫–≤—ã)",
                           parse_mode="HTML")

#
# @dp.message_handler()
# async def fill_name_and_group(m: types.Message):
#     user_name = m.text.split()
#
#     if len(user_name) == 4 and m.text.istitle() and len(user_name[3]) == 4:
#         user_tg_id = str(m.from_user.id)
#         clients_name = str(user_name[0] + ' ' + user_name[1] + ' ' + user_name[2])
#         group_number = str(user_name[3])
#         list_for_google_sheet.append(user_tg_id)
#         list_for_google_sheet.append(clients_name)
#         list_for_google_sheet.append(group_number)
#         await bot.send_message(chat_id=m.from_user.id,
#                                text=f"–£–∫–∞–∂–∏—Ç–µ —Å–≤–æ—é –ø–æ—á—Ç—É\n",
#                                parse_mode="HTML")
#
#     elif '@' in user_name[0] and '.' in user_name[0][user_name[0].find('@'):]:
#         client_mail = str(user_name[0])
#         current_time = datetime.now()
#         list_for_google_sheet.append(str(current_time))
#         list_for_google_sheet.append(client_mail)
#         await bot.send_message(chat_id=m.from_user.id,
#                                text=f"–ê —Ç–µ–ø–µ—Ä—å —Ä–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–≤–æ–µ–π –ø—Ä–æ–±–ª–µ–º–µ.\n\n"
#                                     f"<b>–≠—Ç—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —É–≤–∏–¥–∏—Ç —Ç–æ–ª—å–∫–æ –ø—Å–∏—Ö–æ–ª–æ–≥ </b>.\n\n"
#                                     f"–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –æ—Ç 6 –¥–æ 50 —Å–ª–æ–≤.",
#                                parse_mode="HTML")
#
#     elif len(user_name) > 5:
#         description_of_the_problem = ""
#         for i in range(0, len(user_name)):
#             description_of_the_problem += str(user_name[i] + ' ')
#         list_for_google_sheet.append(description_of_the_problem)
#         if len(list_for_google_sheet) > 7:
#             psychology_type = list_for_google_sheet[0]
#             time_and_data_type = list_for_google_sheet[1]
#             list_for_google_sheet.remove(psychology_type)
#             list_for_google_sheet.remove(time_and_data_type)
#             list_for_google_sheet.append(time_and_data_type)
#             list_for_google_sheet.append(psychology_type)
#         else:
#             psychology_type = list_for_google_sheet[0]
#             del list_for_google_sheet[0]
#             list_for_google_sheet.append('None')
#             list_for_google_sheet.append(psychology_type)
#         worksheet.append_row(list_for_google_sheet)
#         await bot.send_message(chat_id=m.from_user.id,
#                                text=f'–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å –Ω–∞ –ø—Ä–∏–µ–º!\n'
#                                     f'–í–æ—Ç –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ:')
#         await bot.send_message(chat_id=m.from_user.id,
#                                text=f'–§–ò–û: {list_for_google_sheet[1]}\n'
#                                     f'–ù–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã: {list_for_google_sheet[2]}\n'
#                                     f'–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞: {list_for_google_sheet[4]}\n'
#                                     f'–ü—Ä–æ–±–ª–µ–º–∞: {list_for_google_sheet[5]}\n'
#                                     f'–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –ø—Ä–∏–µ–º–∞: {list_for_google_sheet[6]}')
#
#         if list_for_google_sheet[7] == '–ü–æ–ª–∏–Ω–∞ –ß–∏–±–∏—Å–æ–≤–∞':
#             await bot.send_message(chat_id=739380400,
#                                    text=f'–£–≤–∞–∂–∞–µ–º–∞—è –ü–æ–ª–∏–Ω–∞, –∫ –≤–∞–º –∑–∞–ø–∏—Å–∞–ª—Å—è –Ω–æ–≤—ã–π —á–µ–ª–æ–≤–µ–∫.\n'
#                                         f'–í–æ—Ç –µ–≥–æ –¥–∞–Ω–Ω—ã–µ:')
#             await bot.send_message(chat_id=739380400,
#                                    text=f'–§–ò–û: {list_for_google_sheet[1]}\n'
#                                         f'–ù–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã: {list_for_google_sheet[2]}\n'
#                                         f'–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞: {list_for_google_sheet[4]}\n'
#                                         f'–ü—Ä–æ–±–ª–µ–º–∞: {list_for_google_sheet[5]}\n'
#                                         f'–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –ø—Ä–∏–µ–º–∞: {list_for_google_sheet[6]}')
#
#         if list_for_google_sheet[6] == '–°—Ä–µ–¥–∞ 11 –æ–∫—Ç—è–±—Ä—è 2023, 14:00' or list_for_google_sheet[
#             6] == '–°—Ä–µ–¥–∞ 11 –æ–∫—Ç—è–±—Ä—è 2023, 15:00' or list_for_google_sheet[6] == '–°—Ä–µ–¥–∞ 11 –æ–∫—Ç—è–±—Ä—è 2023, 16:00':
#             scheduler = AsyncIOScheduler(timezone="Europe/Moscow")
#             scheduler.add_job(delay_reminder, trigger='cron', day_of_week='0, 1, 4', hour='18', minute='30',
#                               end_date='2023-10-11', kwargs={'chat_id': m.from_user.id})
#             scheduler.start()
#
#         if list_for_google_sheet[6] == '–°—Ä–µ–¥–∞ 18 –æ–∫—Ç—è–±—Ä—è 2023, 14:00' or list_for_google_sheet[
#             6] == '–°—Ä–µ–¥–∞ 18 –æ–∫—Ç—è–±—Ä—è 2023, 15:00' or list_for_google_sheet[6] == '–°—Ä–µ–¥–∞ 18 –æ–∫—Ç—è–±—Ä—è 2023, 16:00':
#             scheduler = AsyncIOScheduler(timezone="Europe/Moscow")
#             scheduler.add_job(delay_reminder, trigger='cron', day_of_week='0, 1, 4', hour='18', minute='30',
#                               end_date='2023-10-18', kwargs={'chat_id': m.from_user.id})
#             scheduler.start()
#
#         if list_for_google_sheet[6] == '–°—Ä–µ–¥–∞ 25 –æ–∫—Ç—è–±—Ä—è 2023, 14:00' or list_for_google_sheet[
#             6] == '–°—Ä–µ–¥–∞ 25 –æ–∫—Ç—è–±—Ä—è 2023, 15:00' or list_for_google_sheet[6] == '–°—Ä–µ–¥–∞ 25 –æ–∫—Ç—è–±—Ä—è 2023, 16:00':
#             scheduler = AsyncIOScheduler(timezone="Europe/Moscow")
#             scheduler.add_job(delay_reminder, trigger='cron', day_of_week='0, 1, 4', hour='18', minute='30',
#                               end_date='2023-10-25', kwargs={'chat_id': m.from_user.id})
#             scheduler.start()
#
#     elif user_name[0] == '–£–¥–∞–ª–∏' or user_name[0] == '—É–¥–∞–ª–∏':
#         cell_list = worksheet.findall(str(m.from_user.id))
#         if cell_list is None:
#             await bot.send_message(chat_id=m.from_user.id,
#                                    text=f'–£–≤–∞–∂–∞–µ–º—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –≤—ã —Ä–∞–Ω–µ–µ –Ω–µ –∑–∞–ø–∏—Å–æ–≤–∞–ª–∏—Å—å –Ω–∞ –ø—Ä–∏–µ–º –∫ –ø—Å–∏—Ö–æ–ª–æ–≥—É,'
#                                         f'–ø–æ—ç—Ç–æ–º—É –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –≤–∞—à—É –∑–∞–ø–∏—Å—å')
#         else:
#             for i in cell_list:
#                 row_number = i.row
#                 column_number = i.col
#                 worksheet.update_cell(row_number, column_number + 8, f'–û—Ç–º–µ–Ω–∞ –∑–∞–ø–∏—Å–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –≤ {datetime.now()}')
#             await bot.send_message(chat_id=m.from_user.id,
#                                    text=f'–í–∞—à–∞ –∑–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞.\n'
#                                         f'–ü—Å–∏—Ö–æ–ª–æ–≥ –æ–ø–æ–≤–µ—â–µ–Ω –æ –¥–∞–Ω–Ω–æ–º –ø—Ä–æ–∏—Å—à–µ—Å—Ç–≤–∏–∏')
#             await bot.send_message(chat_id=739380400,
#                                    text=f'–£–≤–∞–∂–∞–µ–º–∞—è –ü–æ–ª–∏–Ω–∞, –¥–∞–Ω–Ω—ã–π —á–µ–ª–æ–≤–µ–∫ <b>–æ—Ç–∫–∞–∑–∞–ª—Å—è</b> –æ—Ç –≤—Å—Ç—Ä–µ—á–∏ —Å –≤–∞–º–∏.\n'
#                                         f'–í–æ—Ç –µ–≥–æ –¥–∞–Ω–Ω—ã–µ:')
#             await bot.send_message(chat_id=739380400,
#                                    text=f'–§–ò–û: {list_for_google_sheet[1]}\n'
#                                         f'–ù–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã: {list_for_google_sheet[2]}\n'
#                                         f'–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞: {list_for_google_sheet[4]}\n'
#                                         f'–ü—Ä–æ–±–ª–µ–º–∞: {list_for_google_sheet[5]}\n'
#                                         f'–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –ø—Ä–∏–µ–º–∞: {list_for_google_sheet[6]}')


@dp.message_handler()
async def take_user_name(m: types.Message) -> user_name:
    global user_name
    global full_name
    user_name = m.text.split()
    if len(user_name) == 3 and m.text.istitle():
        full_name = m.text
        await bot.send_message(chat_id=m.from_user.id,
                               text=f'–Ø –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø–æ–Ω–∏–º–∞—é, —á—Ç–æ –≤–∞—Å –∑–æ–≤—É—Ç {m.text}',
                               reply_markup=take_user_name_kb)

    elif len(user_name) == 4 and user_name[0] == '–≥–¥–µ':
        teachers_name = str(user_name[1] + ' ' + user_name[2] + ' ' + user_name[3])
        await bot.send_message(chat_id=m.from_user.id,
                               text=f'{m.from_user.first_name}, –≤–æ—Ç, –≥–¥–µ —Å–µ–≥–æ–¥–Ω—è –±—É–¥–µ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è '
                                    f'<b>{teachers_name}</b>',
                               parse_mode='HTML')
        current_daatetime = str(date.today())
        i = 0
        while i < len(sched_w_st):
            if current_daatetime == sched_w_st[i]['date'] and teachers_name == sched_w_st[i]['teachers']:
                await bot.send_message(chat_id=m.from_user.id,
                                       text=f"<b>{sched_w_st[i]['place']}</b>\n<b>{sched_w_st[i]['time']}</b>",
                                       parse_mode="HTML")
            i += 1

    elif len(user_name) == 4 and user_name[0] == '–ì–¥–µ':
        teachers_name = str(user_name[1] + ' ' + user_name[2] + ' ' + user_name[3])
        await bot.send_message(chat_id=m.from_user.id,
                               text=f'{m.from_user.first_name}, –≤–æ—Ç, –≥–¥–µ —Å–µ–≥–æ–¥–Ω—è –±—É–¥–µ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è '
                                    f'<b>{teachers_name}</b>',
                               parse_mode='HTML')
        current_daatetime = str(date.today())
        i = 0
        while i < len(sched_w_st):
            if current_daatetime == sched_w_st[i]['date'] and teachers_name == sched_w_st[i]['teachers']:
                await bot.send_message(chat_id=m.from_user.id,
                                       text=f"<b>{sched_w_st[i]['place']}</b>\n<b>{sched_w_st[i]['time']}</b>",
                                       parse_mode="HTML")
            i += 1

    elif len(user_name) == 4 and user_name[0] == '–ø–æ—á—Ç–∞':
        teachers_name = str(user_name[1] + ' ' + user_name[2] + ' ' + user_name[3])
        i = 0
        while i < len(data_all_teachers_and_mails):
            if teachers_name in data_all_teachers_and_mails[i].values():
                await bot.send_message(chat_id=m.from_user.id,
                                       text=f"{m.from_user.first_name}, –≤–æ—Ç –ø–æ—á—Ç–∞"
                                            f": "
                                            f"<b>{data_all_teachers_and_mails[i]['mail']}</b>",
                                       parse_mode="HTML")
            i += 1

    elif len(user_name) == 4 and user_name[0] == '–ü–æ—á—Ç–∞':
        teachers_name = str(user_name[1] + ' ' + user_name[2] + ' ' + user_name[3])
        i = 0
        while i < len(data_all_teachers_and_mails):
            if teachers_name in data_all_teachers_and_mails[i].values():
                await bot.send_message(chat_id=m.from_user.id,
                                       text=f"{m.from_user.first_name}, –≤–æ—Ç –ø–æ—á—Ç–∞"
                                            f": "
                                            f"<b>{data_all_teachers_and_mails[i]['mail']}</b>",
                                       parse_mode="HTML")
            i += 1

    elif user_name[0] == "–≠—Ç–∞":
        photo = open('1.png', 'rb')
        await get_schedule(full_name)
        await bot.send_message(chat_id=m.from_user.id,
                               text=f'–í–æ—Ç –≤–∞—à–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —ç—Ç—É –Ω–µ–¥–µ–ª—é, {full_name}')
        await bot.send_photo(chat_id=m.from_user.id,
                             photo=photo)

    elif user_name[0] == "–°–ª–µ–¥—É—é—â–∞—è":
        photo = open('2.png', 'rb')
        await get_schedule(full_name)
        await bot.send_message(chat_id=m.from_user.id,
                               text=f'–í–æ—Ç –≤–∞—à–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é, {full_name}')
        await bot.send_photo(chat_id=m.from_user.id,
                             photo=photo)

    elif len(user_name) == 4 and m.text.istitle() and len(user_name[3]) == 4:
        user_tg_id = str(m.from_user.id)
        clients_name = str(user_name[0] + ' ' + user_name[1] + ' ' + user_name[2])
        group_number = str(user_name[3])
        list_for_google_sheet.append(user_tg_id)
        list_for_google_sheet.append(clients_name)
        list_for_google_sheet.append(group_number)
        await bot.send_message(chat_id=m.from_user.id,
                               text=f"–£–∫–∞–∂–∏—Ç–µ —Å–≤–æ—é –ø–æ—á—Ç—É\n",
                               parse_mode="HTML")

    elif '@' in user_name[0] and '.' in user_name[0][user_name[0].find('@'):]:
        client_mail = str(user_name[0])
        current_time = datetime.now()
        list_for_google_sheet.append(str(current_time))
        list_for_google_sheet.append(client_mail)
        await bot.send_message(chat_id=m.from_user.id,
                               text=f"–ê —Ç–µ–ø–µ—Ä—å —Ä–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–≤–æ–µ–π –ø—Ä–æ–±–ª–µ–º–µ.\n\n"
                                    f"<b>–≠—Ç—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —É–≤–∏–¥–∏—Ç —Ç–æ–ª—å–∫–æ –ø—Å–∏—Ö–æ–ª–æ–≥ </b>.\n\n"
                                    f"–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –æ—Ç 6 –¥–æ 50 —Å–ª–æ–≤.",
                               parse_mode="HTML")

    elif len(user_name) > 5:
        description_of_the_problem = ""
        for i in range(0, len(user_name)):
            description_of_the_problem += str(user_name[i] + ' ')
        list_for_google_sheet.append(description_of_the_problem)
        if len(list_for_google_sheet) > 7:
            psychology_type = list_for_google_sheet[0]
            time_and_data_type = list_for_google_sheet[1]
            list_for_google_sheet.remove(psychology_type)
            list_for_google_sheet.remove(time_and_data_type)
            list_for_google_sheet.append(time_and_data_type)
            list_for_google_sheet.append(psychology_type)
        else:
            psychology_type = list_for_google_sheet[0]
            del list_for_google_sheet[0]
            list_for_google_sheet.append('None')
            list_for_google_sheet.append(psychology_type)
        worksheet.append_row(list_for_google_sheet)
        await bot.send_message(chat_id=m.from_user.id,
                               text=f'–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å –Ω–∞ –ø—Ä–∏–µ–º!\n'
                                    f'–í–æ—Ç –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ:')
        await bot.send_message(chat_id=m.from_user.id,
                               text=f'–§–ò–û: {list_for_google_sheet[1]}\n'
                                    f'–ù–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã: {list_for_google_sheet[2]}\n'
                                    f'–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞: {list_for_google_sheet[4]}\n'
                                    f'–ü—Ä–æ–±–ª–µ–º–∞: {list_for_google_sheet[5]}\n'
                                    f'–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –ø—Ä–∏–µ–º–∞: {list_for_google_sheet[6]}',
                               reply_markup=kb_main)

        if list_for_google_sheet[7] == '–ü–æ–ª–∏–Ω–∞ –ß–∏–±–∏—Å–æ–≤–∞':
            await bot.send_message(chat_id=739380400,
                                   text=f'–£–≤–∞–∂–∞–µ–º–∞—è –ü–æ–ª–∏–Ω–∞, –∫ –≤–∞–º –∑–∞–ø–∏—Å–∞–ª—Å—è –Ω–æ–≤—ã–π —á–µ–ª–æ–≤–µ–∫.\n'
                                        f'–í–æ—Ç –µ–≥–æ –¥–∞–Ω–Ω—ã–µ:')
            await bot.send_message(chat_id=739380400,
                                   text=f'–§–ò–û: {list_for_google_sheet[1]}\n'
                                        f'–ù–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã: {list_for_google_sheet[2]}\n'
                                        f'–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞: {list_for_google_sheet[4]}\n'
                                        f'–ü—Ä–æ–±–ª–µ–º–∞: {list_for_google_sheet[5]}\n'
                                        f'–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –ø—Ä–∏–µ–º–∞: {list_for_google_sheet[6]}')

        if list_for_google_sheet[6] == '–°—Ä–µ–¥–∞ 11 –æ–∫—Ç—è–±—Ä—è 2023, 14:00' or list_for_google_sheet[
            6] == '–°—Ä–µ–¥–∞ 11 –æ–∫—Ç—è–±—Ä—è 2023, 15:00' or list_for_google_sheet[6] == '–°—Ä–µ–¥–∞ 11 –æ–∫—Ç—è–±—Ä—è 2023, 16:00':
            scheduler = AsyncIOScheduler(timezone="Europe/Moscow")
            scheduler.add_job(delay_reminder, trigger='cron', day_of_week='0, 1, 4', hour='18', minute='30',
                              end_date='2023-10-11', kwargs={'chat_id': m.from_user.id})
            scheduler.start()

        if list_for_google_sheet[6] == '–°—Ä–µ–¥–∞ 18 –æ–∫—Ç—è–±—Ä—è 2023, 14:00' or list_for_google_sheet[
            6] == '–°—Ä–µ–¥–∞ 18 –æ–∫—Ç—è–±—Ä—è 2023, 15:00' or list_for_google_sheet[6] == '–°—Ä–µ–¥–∞ 18 –æ–∫—Ç—è–±—Ä—è 2023, 16:00':
            scheduler = AsyncIOScheduler(timezone="Europe/Moscow")
            scheduler.add_job(delay_reminder, trigger='cron', day_of_week='0, 1, 4', hour='18', minute='30',
                              end_date='2023-10-18', kwargs={'chat_id': m.from_user.id})
            scheduler.start()

        if list_for_google_sheet[6] == '–°—Ä–µ–¥–∞ 25 –æ–∫—Ç—è–±—Ä—è 2023, 14:00' or list_for_google_sheet[
            6] == '–°—Ä–µ–¥–∞ 25 –æ–∫—Ç—è–±—Ä—è 2023, 15:00' or list_for_google_sheet[6] == '–°—Ä–µ–¥–∞ 25 –æ–∫—Ç—è–±—Ä—è 2023, 16:00':
            scheduler = AsyncIOScheduler(timezone="Europe/Moscow")
            scheduler.add_job(delay_reminder, trigger='cron', day_of_week='0, 1, 4', hour='18', minute='30',
                              end_date='2023-10-25', kwargs={'chat_id': m.from_user.id})
            scheduler.start()

    elif user_name[0] == '–£–¥–∞–ª–∏' or user_name[0] == '—É–¥–∞–ª–∏':
        cell_list = worksheet.findall(str(m.from_user.id))
        if cell_list is None:
            await bot.send_message(chat_id=m.from_user.id,
                                   text=f'–£–≤–∞–∂–∞–µ–º—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –≤—ã —Ä–∞–Ω–µ–µ –Ω–µ –∑–∞–ø–∏—Å–æ–≤–∞–ª–∏—Å—å –Ω–∞ –ø—Ä–∏–µ–º –∫ –ø—Å–∏—Ö–æ–ª–æ–≥—É,'
                                        f'–ø–æ—ç—Ç–æ–º—É –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –≤–∞—à—É –∑–∞–ø–∏—Å—å',
                                   reply_markup=kb_main)
        else:
            for i in cell_list:
                row_number = i.row
                column_number = i.col
                worksheet.update_cell(row_number, column_number + 8, f'–û—Ç–º–µ–Ω–∞ –∑–∞–ø–∏—Å–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –≤ {datetime.now()}')
            await bot.send_message(chat_id=m.from_user.id,
                                   text=f'–í–∞—à–∞ –∑–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞.\n'
                                        f'–ü—Å–∏—Ö–æ–ª–æ–≥ –æ–ø–æ–≤–µ—â–µ–Ω –æ –¥–∞–Ω–Ω–æ–º –ø—Ä–æ–∏—Å—à–µ—Å—Ç–≤–∏–∏',
                                   reply_markup=kb_main)
            await bot.send_message(chat_id=739380400,
                                   text=f'–£–≤–∞–∂–∞–µ–º–∞—è –ü–æ–ª–∏–Ω–∞, –¥–∞–Ω–Ω—ã–π —á–µ–ª–æ–≤–µ–∫ <b>–æ—Ç–∫–∞–∑–∞–ª—Å—è</b> –æ—Ç –≤—Å—Ç—Ä–µ—á–∏ —Å –≤–∞–º–∏.\n'
                                        f'–í–æ—Ç –µ–≥–æ –¥–∞–Ω–Ω—ã–µ:')
            await bot.send_message(chat_id=739380400,
                                   text=f'–§–ò–û: {list_for_google_sheet[1]}\n'
                                        f'–ù–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã: {list_for_google_sheet[2]}\n'
                                        f'–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞: {list_for_google_sheet[4]}\n'
                                        f'–ü—Ä–æ–±–ª–µ–º–∞: {list_for_google_sheet[5]}\n'
                                        f'–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –ø—Ä–∏–µ–º–∞: {list_for_google_sheet[6]}')



    return user_name


@dp.callback_query_handler()
async def incorrect_name_func(callback: types.CallbackQuery) -> None:
    telegram_user_name = callback.from_user.first_name
    if callback.data == 'incorrect_name':
        await callback.message.edit_text(text='–ü–æ–ø—Ä–æ–±—É–π  –≤–≤–µ—Å—Ç–∏ —Å–≤–æ–µ –∏–º—è –µ—â–µ —Ä–∞–∑, —Ç–æ–ª—å–∫–æ –¥–∞–≤–∞–π –±–µ–∑ –æ—à–∏–±–æ–∫ –≤ —ç—Ç–æ—Ç —Ä–∞–∑\n' +
                                              'üëâüëà')
    elif callback.data == 'correct_name':
        await callback.message.edit_text(text=f"–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —ç—Ç—É –Ω–µ–¥–µ–ª—é, —Ç–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –Ω–∞–∂–∞—Ç—å –Ω–∞ "
                                              f"–∫–Ω–æ–ø–∫—É:\n"
                                              f" <b>'–≠—Ç–∞'</b>.\n\n"
                                              f"–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é, —Ç–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ "
                                              f"–Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É:\n<b>'–°–ª–µ–¥—É—é—â–∞—è'</b>.\n\n",
                                         parse_mode="HTML",
                                         reply_markup=pic_keyboard)

    elif callback.data == 'where_is_he':
        await callback.message.edit_text(text=f'{telegram_user_name}, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, –≥–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å '
                                              f'–ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —É–∫–∞–∑–∞—Ç—å –µ–≥–æ –∏–º—è –∫–∞–∫ –≤ –ø–∞—Å–ø–æ—Ä—Ç–µ —Å '
                                              f" –ø—Ä–∏–ø–∏—Å–∫–æ–π ¬´–≥–¥–µ¬ª'.\n\n"
                                              f'–ù–∞–ø—Ä–∏–º–µ—Ä, <b>¬´–ì–¥–µ –ò–≤–∞–Ω–æ–≤ –í–ª–∞–¥–∏–º–∏—Ä –í–ª–∞–¥–∏–º–∏—Ä–æ–≤–∏—á¬ª</b>',
                                         parse_mode='HTML')
    elif callback.data == 'prepod_email':
        await callback.message.edit_text(text=f'{telegram_user_name}, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ—á—Ç—É –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–≥–æ –≤–∞—Å '
                                              f'–ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —É–∫–∞–∑–∞—Ç—å –µ–≥–æ –∏–º—è –∫–∞–∫ –≤ –ø–∞—Å–ø–æ—Ä—Ç–µ —Å'
                                              f'–ø—Ä–∏–ø–∏—Å–∫–æ–π ¬´–ø–æ—á—Ç–∞¬ª.\n\n'
                                              f'–ù–∞–ø—Ä–∏–º–µ—Ä, <b>¬´–ü–æ—á—Ç–∞ –ò–≤–∞–Ω–æ–≤ –í–ª–∞–¥–∏–º–∏—Ä –í–ª–∞–¥–∏–º–∏—Ä–æ–≤–∏—á¬ª</b>',
                                         parse_mode='HTML')

    elif callback.data == 'first_pair':
        current_time = '09:00-10:30'
        current_date = str(date.today())
        for i in range(len(sched_w_st)):
            if sched_w_st[i]['date'] == current_date and sched_w_st[i]['time'] == current_time:
                if sched_w_st[i]['place'].startswith('1') and str(sched_w_st[i]['place']) in \
                        list_of_kabs_first_flour:
                    list_of_kabs_first_flour.remove(str(sched_w_st[i]['place']))
                elif sched_w_st[i]['place'].startswith('2') and str(sched_w_st[i]['place']) in \
                        list_of_kabs_second_flour:
                    list_of_kabs_second_flour.remove(str(sched_w_st[i]['place']))
                elif sched_w_st[i]['place'].startswith('3') and str(sched_w_st[i]['place']) in \
                        list_of_kabs_third_flour:
                    list_of_kabs_third_flour.remove(str(sched_w_st[i]['place']))
                elif sched_w_st[i]['place'].startswith('4') and str(sched_w_st[i]['place']) in \
                        list_of_kabs_fourth_flour:
                    list_of_kabs_fourth_flour.remove(str(sched_w_st[i]['place']))
                elif sched_w_st[i]['place'].startswith('5') and str(sched_w_st[i]['place']) in \
                        list_of_kabs_fith_flour:
                    list_of_kabs_fith_flour.remove(str(sched_w_st[i]['place']))

        await callback.message.edit_text(text=f"{telegram_user_name}, –≤–æ—Ç —Å–ø–∏—Å–æ–∫ –∫–∞–±–∏–Ω–µ—Ç–æ–≤, –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –Ω–∞ <b>–ø–µ—Ä–≤–æ–π "
                                              f"–ø–∞—Ä–µ</b>: \n\n"
                                              f"<b>–ü–µ—Ä–≤—ã–π —ç—Ç–∞–∂</b>: \n{', '.join(map(str, list_of_kabs_first_flour))}\n",
                                         parse_mode='HTML')
        await bot.send_message(chat_id=callback.from_user.id,
                               text=f"–í—Ç–æ—Ä–æ–π —ç—Ç–∞–∂: \n{', '.join(map(str, list_of_kabs_second_flour))}\n",
                               )
        await bot.send_message(chat_id=callback.from_user.id,
                               text=f"–¢—Ä–µ—Ç–∏–π —ç—Ç–∞–∂: \n{', '.join(map(str, list_of_kabs_third_flour))}\n",
                               )
        await bot.send_message(chat_id=callback.from_user.id,
                               text=f"–ß–µ—Ç–≤–µ—Ä—Ç—ã–π —ç—Ç–∞–∂: \n{', '.join(map(str, list_of_kabs_fourth_flour))}\n",
                               )
        await bot.send_message(chat_id=callback.from_user.id,
                               text=f"–ü—è—Ç—ã–π —ç—Ç–∞–∂: \n{', '.join(map(str, list_of_kabs_fith_flour))}\n",
                               )

    elif callback.data == 'second_pair':
        current_time = '10:40-12:10'
        current_date = str(date.today())
        for i in range(len(sched_w_st)):
            if sched_w_st[i]['date'] == current_date and sched_w_st[i]['time'] == current_time:
                if sched_w_st[i]['place'].startswith('1') and str(sched_w_st[i]['place']) in \
                            list_of_kabs_first_flour:
                    list_of_kabs_first_flour.remove(str(sched_w_st[i]['place']))
                elif sched_w_st[i]['place'].startswith('2') and str(sched_w_st[i]['place']) in \
                            list_of_kabs_second_flour:
                    list_of_kabs_second_flour.remove(str(sched_w_st[i]['place']))
                elif sched_w_st[i]['place'].startswith('3') and str(sched_w_st[i]['place']) in \
                            list_of_kabs_third_flour:
                    list_of_kabs_third_flour.remove(str(sched_w_st[i]['place']))
                elif sched_w_st[i]['place'].startswith('4') and str(sched_w_st[i]['place']) in \
                            list_of_kabs_fourth_flour:
                    list_of_kabs_fourth_flour.remove(str(sched_w_st[i]['place']))
                elif sched_w_st[i]['place'].startswith('5') and str(sched_w_st[i]['place']) in \
                            list_of_kabs_fith_flour:
                    list_of_kabs_fith_flour.remove(str(sched_w_st[i]['place']))

        await callback.message.edit_text(text=f"{telegram_user_name}, –≤–æ—Ç —Å–ø–∏—Å–æ–∫ –∫–∞–±–∏–Ω–µ—Ç–æ–≤, –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –Ω–∞ <b>–≤—Ç–æ—Ä–æ–π "
                                              f"–ø–∞—Ä–µ</b>:\n\n"
                                              f"<b>–ü–µ—Ä–≤—ã–π —ç—Ç–∞–∂</b>: \n{', '.join(map(str, list_of_kabs_first_flour))}\n",
                                         parse_mode='HTML')
        await bot.send_message(chat_id=callback.from_user.id,
                               text=f"–í—Ç–æ—Ä–æ–π —ç—Ç–∞–∂: \n{', '.join(map(str, list_of_kabs_second_flour))}\n",
                               )
        await bot.send_message(chat_id=callback.from_user.id,
                               text=f"–¢—Ä–µ—Ç–∏–π —ç—Ç–∞–∂: \n{', '.join(map(str, list_of_kabs_third_flour))}\n",
                               )
        await bot.send_message(chat_id=callback.from_user.id,
                               text=f"–ß–µ—Ç–≤–µ—Ä—Ç—ã–π —ç—Ç–∞–∂: \n{', '.join(map(str, list_of_kabs_fourth_flour))}\n",
                               )
        await bot.send_message(chat_id=callback.from_user.id,
                               text=f"–ü—è—Ç—ã–π —ç—Ç–∞–∂: \n{', '.join(map(str, list_of_kabs_fith_flour))}\n",
                              )

    elif callback.data == 'third_pair':
        current_time = '12:20-13:50'
        current_date = str(date.today())
        for i in range(len(sched_w_st)):
            if sched_w_st[i]['date'] == current_date and sched_w_st[i]['time'] == current_time:
                if sched_w_st[i]['place'].startswith('1') and str(sched_w_st[i]['place']) in \
                        list_of_kabs_first_flour:
                    list_of_kabs_first_flour.remove(str(sched_w_st[i]['place']))
                elif sched_w_st[i]['place'].startswith('2') and str(sched_w_st[i]['place']) in \
                        list_of_kabs_second_flour:
                    list_of_kabs_second_flour.remove(str(sched_w_st[i]['place']))
                elif sched_w_st[i]['place'].startswith('3') and str(sched_w_st[i]['place']) in \
                        list_of_kabs_third_flour:
                    list_of_kabs_third_flour.remove(str(sched_w_st[i]['place']))
                elif sched_w_st[i]['place'].startswith('4') and str(sched_w_st[i]['place']) in \
                        list_of_kabs_fourth_flour:
                    list_of_kabs_fourth_flour.remove(str(sched_w_st[i]['place']))
                elif sched_w_st[i]['place'].startswith('5') and str(sched_w_st[i]['place']) in \
                        list_of_kabs_fith_flour:
                    list_of_kabs_fith_flour.remove(str(sched_w_st[i]['place']))

        await callback.message.edit_text(text=f"{telegram_user_name}, –≤–æ—Ç —Å–ø–∏—Å–æ–∫ –∫–∞–±–∏–Ω–µ—Ç–æ–≤, –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –Ω–∞ <b>—Ç—Ä–µ—Ç—å–µ–π "
                                              f"–ø–∞—Ä–µ</b>:\n\n"
                                              f"<b>–ü–µ—Ä–≤—ã–π —ç—Ç–∞–∂</b>: \n{', '.join(map(str, list_of_kabs_first_flour))}\n",
                                         parse_mode='HTML')
        await bot.send_message(chat_id=callback.from_user.id,
                               text=f"–í—Ç–æ—Ä–æ–π —ç—Ç–∞–∂: \n{', '.join(map(str, list_of_kabs_second_flour))}\n",
                               )
        await bot.send_message(chat_id=callback.from_user.id,
                               text=f"–¢—Ä–µ—Ç–∏–π —ç—Ç–∞–∂: \n{', '.join(map(str, list_of_kabs_third_flour))}\n",
                               )
        await bot.send_message(chat_id=callback.from_user.id,
                               text=f"–ß–µ—Ç–≤–µ—Ä—Ç—ã–π —ç—Ç–∞–∂: \n{', '.join(map(str, list_of_kabs_fourth_flour))}\n",
                               )
        await bot.send_message(chat_id=callback.from_user.id,
                               text=f"–ü—è—Ç—ã–π —ç—Ç–∞–∂: \n{', '.join(map(str, list_of_kabs_fith_flour))}\n",
                               )

    elif callback.data == 'forth_pair':
        current_time = '14:00-15:30'
        current_date = str(date.today())
        for i in range(len(sched_w_st)):
            if sched_w_st[i]['date'] == current_date and sched_w_st[i]['time'] == current_time:
                if sched_w_st[i]['place'].startswith('1') and str(sched_w_st[i]['place']) in \
                        list_of_kabs_first_flour:
                    list_of_kabs_first_flour.remove(str(sched_w_st[i]['place']))
                elif sched_w_st[i]['place'].startswith('2') and str(sched_w_st[i]['place']) in \
                        list_of_kabs_second_flour:
                    list_of_kabs_second_flour.remove(str(sched_w_st[i]['place']))
                elif sched_w_st[i]['place'].startswith('3') and str(sched_w_st[i]['place']) in \
                        list_of_kabs_third_flour:
                    list_of_kabs_third_flour.remove(str(sched_w_st[i]['place']))
                elif sched_w_st[i]['place'].startswith('4') and str(sched_w_st[i]['place']) in \
                        list_of_kabs_fourth_flour:
                    list_of_kabs_fourth_flour.remove(str(sched_w_st[i]['place']))
                elif sched_w_st[i]['place'].startswith('5') and str(sched_w_st[i]['place']) in \
                        list_of_kabs_fith_flour:
                    list_of_kabs_fith_flour.remove(str(sched_w_st[i]['place']))

        await callback.message.edit_text(text=f"{telegram_user_name}, –≤–æ—Ç —Å–ø–∏—Å–æ–∫ –∫–∞–±–∏–Ω–µ—Ç–æ–≤, –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –Ω–∞ <b>—á–µ—Ç–≤–µ—Ä—Ç–æ–π "
                                              f"–ø–∞—Ä–µ</b>:\n\n"
                                              f"<b>–ü–µ—Ä–≤—ã–π —ç—Ç–∞–∂</b>: \n{', '.join(map(str, list_of_kabs_first_flour))}\n",
                                         parse_mode='HTML')
        await bot.send_message(chat_id=callback.from_user.id,
                               text=f"–í—Ç–æ—Ä–æ–π —ç—Ç–∞–∂: \n{', '.join(map(str, list_of_kabs_second_flour))}\n",
                               )
        await bot.send_message(chat_id=callback.from_user.id,
                               text=f"–¢—Ä–µ—Ç–∏–π —ç—Ç–∞–∂: \n{', '.join(map(str, list_of_kabs_third_flour))}\n",
                               )
        await bot.send_message(chat_id=callback.from_user.id,
                               text=f"–ß–µ—Ç–≤–µ—Ä—Ç—ã–π —ç—Ç–∞–∂: \n{', '.join(map(str, list_of_kabs_fourth_flour))}\n",
                               )
        await bot.send_message(chat_id=callback.from_user.id,
                               text=f"–ü—è—Ç—ã–π —ç—Ç–∞–∂: \n{', '.join(map(str, list_of_kabs_fith_flour))}\n",
                               )

    elif callback.data == 'fifth_pair':
        current_time = '15:40-17:10'
        current_date = str(date.today())
        for i in range(len(sched_w_st)):
            if sched_w_st[i]['date'] == current_date and sched_w_st[i]['time'] == current_time:
                if sched_w_st[i]['place'].startswith('1') and str(sched_w_st[i]['place']) in \
                        list_of_kabs_first_flour:
                    list_of_kabs_first_flour.remove(str(sched_w_st[i]['place']))
                elif sched_w_st[i]['place'].startswith('2') and str(sched_w_st[i]['place']) in \
                        list_of_kabs_second_flour:
                    list_of_kabs_second_flour.remove(str(sched_w_st[i]['place']))
                elif sched_w_st[i]['place'].startswith('3') and str(sched_w_st[i]['place']) in \
                        list_of_kabs_third_flour:
                    list_of_kabs_third_flour.remove(str(sched_w_st[i]['place']))
                elif sched_w_st[i]['place'].startswith('4') and str(sched_w_st[i]['place']) in \
                        list_of_kabs_fourth_flour:
                    list_of_kabs_fourth_flour.remove(str(sched_w_st[i]['place']))
                elif sched_w_st[i]['place'].startswith('5') and str(sched_w_st[i]['place']) in \
                        list_of_kabs_fith_flour:
                    list_of_kabs_fith_flour.remove(str(sched_w_st[i]['place']))

        await callback.message.edit_text(text=f"{telegram_user_name}, –≤–æ—Ç —Å–ø–∏—Å–æ–∫ –∫–∞–±–∏–Ω–µ—Ç–æ–≤, –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –Ω–∞ <b>–ø—è—Ç–æ–π "
                                              f"–ø–∞—Ä–µ</b>:\n\n"
                                              f"<b>–ü–µ—Ä–≤—ã–π —ç—Ç–∞–∂</b>: \n{', '.join(map(str, list_of_kabs_first_flour))}\n",
                                         parse_mode='HTML')
        await bot.send_message(chat_id=callback.from_user.id,
                               text=f"–í—Ç–æ—Ä–æ–π —ç—Ç–∞–∂: \n{', '.join(map(str, list_of_kabs_second_flour))}\n",
                               )
        await bot.send_message(chat_id=callback.from_user.id,
                               text=f"–¢—Ä–µ—Ç–∏–π —ç—Ç–∞–∂: \n{', '.join(map(str, list_of_kabs_third_flour))}\n",
                               )
        await bot.send_message(chat_id=callback.from_user.id,
                               text=f"–ß–µ—Ç–≤–µ—Ä—Ç—ã–π —ç—Ç–∞–∂: \n{', '.join(map(str, list_of_kabs_fourth_flour))}\n",
                               )
        await bot.send_message(chat_id=callback.from_user.id,
                               text=f"–ü—è—Ç—ã–π —ç—Ç–∞–∂: \n{', '.join(map(str, list_of_kabs_fith_flour))}\n",
                               )

    elif callback.data == 'six_pair':
        current_time = '17:20-18:50'
        current_date = str(date.today())
        for i in range(len(sched_w_st)):
            if sched_w_st[i]['date'] == current_date and sched_w_st[i]['time'] == current_time:
                if sched_w_st[i]['place'].startswith('1') and str(sched_w_st[i]['place']) in \
                        list_of_kabs_first_flour:
                    list_of_kabs_first_flour.remove(str(sched_w_st[i]['place']))
                elif sched_w_st[i]['place'].startswith('2') and str(sched_w_st[i]['place']) in \
                        list_of_kabs_second_flour:
                    list_of_kabs_second_flour.remove(str(sched_w_st[i]['place']))
                elif sched_w_st[i]['place'].startswith('3') and str(sched_w_st[i]['place']) in \
                        list_of_kabs_third_flour:
                    list_of_kabs_third_flour.remove(str(sched_w_st[i]['place']))
                elif sched_w_st[i]['place'].startswith('4') and str(sched_w_st[i]['place']) in \
                        list_of_kabs_fourth_flour:
                    list_of_kabs_fourth_flour.remove(str(sched_w_st[i]['place']))
                elif sched_w_st[i]['place'].startswith('5') and str(sched_w_st[i]['place']) in \
                        list_of_kabs_fith_flour:
                    list_of_kabs_fith_flour.remove(str(sched_w_st[i]['place']))

        await callback.message.edit_text(text=f"{telegram_user_name}, –≤–æ—Ç —Å–ø–∏—Å–æ–∫ –∫–∞–±–∏–Ω–µ—Ç–æ–≤, –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –Ω–∞ <b>—à–µ—Å—Ç–æ–π "
                                              f"–ø–∞—Ä–µ</b>:\n\n"
                                              f"<b>–ü–µ—Ä–≤—ã–π —ç—Ç–∞–∂</b>: \n{', '.join(map(str, list_of_kabs_first_flour))}\n",
                                         parse_mode='HTML')
        await bot.send_message(chat_id=callback.from_user.id,
                               text=f"–í—Ç–æ—Ä–æ–π —ç—Ç–∞–∂: \n{', '.join(map(str, list_of_kabs_second_flour))}\n",
                               )
        await bot.send_message(chat_id=callback.from_user.id,
                               text=f"–¢—Ä–µ—Ç–∏–π —ç—Ç–∞–∂: \n{', '.join(map(str, list_of_kabs_third_flour))}\n",
                               )
        await bot.send_message(chat_id=callback.from_user.id,
                               text=f"–ß–µ—Ç–≤–µ—Ä—Ç—ã–π —ç—Ç–∞–∂: \n{', '.join(map(str, list_of_kabs_fourth_flour))}\n",
                               )
        await bot.send_message(chat_id=callback.from_user.id,
                               text=f"–ü—è—Ç—ã–π —ç—Ç–∞–∂: \n{', '.join(map(str, list_of_kabs_fith_flour))}\n",
                               )

    elif callback.data == 'seventh_pair':
        current_time = '18:55-20:25'
        current_date = str(date.today())
        for i in range(len(sched_w_st)):
            if sched_w_st[i]['date'] == current_date and sched_w_st[i]['time'] == current_time:
                if sched_w_st[i]['place'].startswith('1') and str(sched_w_st[i]['place']) in \
                        list_of_kabs_first_flour:
                    list_of_kabs_first_flour.remove(str(sched_w_st[i]['place']))
                elif sched_w_st[i]['place'].startswith('2') and str(sched_w_st[i]['place']) in \
                        list_of_kabs_second_flour:
                    list_of_kabs_second_flour.remove(str(sched_w_st[i]['place']))
                elif sched_w_st[i]['place'].startswith('3') and str(sched_w_st[i]['place']) in \
                        list_of_kabs_third_flour:
                    list_of_kabs_third_flour.remove(str(sched_w_st[i]['place']))
                elif sched_w_st[i]['place'].startswith('4') and str(sched_w_st[i]['place']) in \
                        list_of_kabs_fourth_flour:
                    list_of_kabs_fourth_flour.remove(str(sched_w_st[i]['place']))
                elif sched_w_st[i]['place'].startswith('5') and str(sched_w_st[i]['place']) in \
                        list_of_kabs_fith_flour:
                    list_of_kabs_fith_flour.remove(str(sched_w_st[i]['place']))

        await callback.message.edit_text(text=f"{telegram_user_name}, –≤–æ—Ç —Å–ø–∏—Å–æ–∫ –∫–∞–±–∏–Ω–µ—Ç–æ–≤, –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –Ω–∞ <b>—Å–µ–¥—å–º–æ–π "
                                              f"–ø–∞—Ä–µ</b>:\n\n"
                                              f"<b>–ü–µ—Ä–≤—ã–π —ç—Ç–∞–∂</b>: \n{', '.join(map(str, list_of_kabs_first_flour))}\n",
                                         parse_mode='HTML')
        await bot.send_message(chat_id=callback.from_user.id,
                               text=f"–í—Ç–æ—Ä–æ–π —ç—Ç–∞–∂: \n{', '.join(map(str, list_of_kabs_second_flour))}\n",
                               )
        await bot.send_message(chat_id=callback.from_user.id,
                               text=f"–¢—Ä–µ—Ç–∏–π —ç—Ç–∞–∂: \n{', '.join(map(str, list_of_kabs_third_flour))}\n",
                               )
        await bot.send_message(chat_id=callback.from_user.id,
                               text=f"–ß–µ—Ç–≤–µ—Ä—Ç—ã–π —ç—Ç–∞–∂: \n{', '.join(map(str, list_of_kabs_fourth_flour))}\n",
                               )
        await bot.send_message(chat_id=callback.from_user.id,
                               text=f"–ü—è—Ç—ã–π —ç—Ç–∞–∂: \n{', '.join(map(str, list_of_kabs_fith_flour))}\n",
                               )

    elif callback.data == 'eight_pair':
        current_time = '20:30-22:00'
        current_date = str(date.today())
        for i in range(len(sched_w_st)):
            if sched_w_st[i]['date'] == current_date and sched_w_st[i]['time'] == current_time:
                if sched_w_st[i]['place'].startswith('1') and str(sched_w_st[i]['place']) in \
                        list_of_kabs_first_flour:
                    list_of_kabs_first_flour.remove(str(sched_w_st[i]['place']))
                elif sched_w_st[i]['place'].startswith('2') and str(sched_w_st[i]['place']) in \
                        list_of_kabs_second_flour:
                    list_of_kabs_second_flour.remove(str(sched_w_st[i]['place']))
                elif sched_w_st[i]['place'].startswith('3') and str(sched_w_st[i]['place']) in \
                        list_of_kabs_third_flour:
                    list_of_kabs_third_flour.remove(str(sched_w_st[i]['place']))
                elif sched_w_st[i]['place'].startswith('4') and str(sched_w_st[i]['place']) in \
                        list_of_kabs_fourth_flour:
                    list_of_kabs_fourth_flour.remove(str(sched_w_st[i]['place']))
                elif sched_w_st[i]['place'].startswith('5') and str(sched_w_st[i]['place']) in \
                        list_of_kabs_fith_flour:
                    list_of_kabs_fith_flour.remove(str(sched_w_st[i]['place']))

        await callback.message.edit_text(text=f"{telegram_user_name}, –≤–æ—Ç —Å–ø–∏—Å–æ–∫ –∫–∞–±–∏–Ω–µ—Ç–æ–≤, –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –Ω–∞ <b>–≤–æ—Å—å–º–æ–π "
                                              f"–ø–∞—Ä–µ</b>:\n\n"
                                              f"<b>–ü–µ—Ä–≤—ã–π —ç—Ç–∞–∂</b>: \n{', '.join(map(str, list_of_kabs_first_flour))}\n",
                                         parse_mode='HTML')
        await bot.send_message(chat_id=callback.from_user.id,
                               text=f"–í—Ç–æ—Ä–æ–π —ç—Ç–∞–∂: \n{', '.join(map(str, list_of_kabs_second_flour))}\n",
                               )
        await bot.send_message(chat_id=callback.from_user.id,
                               text=f"–¢—Ä–µ—Ç–∏–π —ç—Ç–∞–∂: \n{', '.join(map(str, list_of_kabs_third_flour))}\n",
                               )
        await bot.send_message(chat_id=callback.from_user.id,
                               text=f"–ß–µ—Ç–≤–µ—Ä—Ç—ã–π —ç—Ç–∞–∂: \n{', '.join(map(str, list_of_kabs_fourth_flour))}\n",
                               )
        await bot.send_message(chat_id=callback.from_user.id,
                               text=f"–ü—è—Ç—ã–π —ç—Ç–∞–∂: \n{', '.join(map(str, list_of_kabs_fith_flour))}\n",
                               )

    elif callback.data == 'official':
        await callback.message.answer(text=f'{telegram_user_name}, –≤–æ—Ç —Å–ø–∏—Å–æ–∫ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–µ–¥–ª–∞–≥–∞—é—Ç '
                                           f'<b>–ú–ì–£</b>:',
                                      parse_mode='HTML')
        df = pd.read_excel('Chill_timetable.xlsx', sheet_name='–õ–∏—Å—Ç1')
        for i, row in df.iterrows():
            if row['Activity'] != 'Nothing':
                await bot.send_message(chat_id=callback.from_user.id,
                                       text=f"{row['Data']} ({row['Weekday']}) - {row['Activity']}")

    elif callback.data == 'unofficial':
        await callback.message.answer(text=f'{telegram_user_name}, –≤–æ—Ç —Å–ø–∏—Å–æ–∫ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–µ–¥–ª–∞–≥–∞—é—Ç –Ω–∞—à–∏ '
                                           f'<b>—Å—Ç—É–¥–µ–Ω—Ç—ã</b>:',
                                      parse_mode='HTML')
        await callback.message.answer(text=f'–ü–æ–∫–∞ –Ω–∏—á–µ–≥–æ –Ω–æ–≤–æ–≥–æ –Ω–µ—Ç')

    elif callback.data == 'this':
        await callback.message.edit_reply_markup(reply_markup=None)

        photo = open('1.png', 'rb')
        await get_schedule(full_name)
        await bot.send_message(chat_id=callback.message.chat.id,
                               text=f'–í–æ—Ç –≤–∞—à–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —ç—Ç—É –Ω–µ–¥–µ–ª—é, {full_name}')
        await bot.send_photo(chat_id=callback.message.chat.id,
                             photo=photo)

    elif callback.data == 'next':
        await callback.message.edit_reply_markup(reply_markup=None)

        photo = open('2.png', 'rb')
        await get_schedule(full_name)
        await bot.send_message(chat_id=callback.message.chat.id,
                               text=f'–í–æ—Ç –≤–∞—à–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é, {full_name}')
        await bot.send_photo(chat_id=callback.message.chat.id,
                             photo=photo)


if __name__ == '__main__':
    executor.start_polling(dp,
                           on_startup=on_startup,
                           skip_updates=True)



